{"ast":null,"code":"var _jsxFileName = \"/Users/annaduong/Projects/e-commerce/src/context/shoes.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState, useCallback } from 'react';\nimport Data from '../data/data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShoesContext = /*#__PURE__*/createContext();\nfunction Provider({\n  children\n}) {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [quantities, setQuantities] = useState();\n  const [cart, setCart] = useState([]);\n  const handleAddProduct = (id, name, price, img) => {\n    setCart(prevCart => {\n      // iterate through cart \n      for (const product of prevCart) {\n        // for each selected product (object), if an item is already in there...\n\n        // add that item's quantity to the quantity already in cart \n        // otherwise, if this item hasn't been added...\n        // return the previous cart with new product added \n        return [...prevCart, {\n          id,\n          name,\n          price,\n          img,\n          quantity: quantities[id]\n        }];\n      }\n    });\n  };\n  const handleQuantityChange = (key, newQuantity) => {\n    setQuantities(prev => ({\n      ...prev,\n      [key]: newQuantity\n    }));\n  };\n  const initializeQuantities = useCallback(() => {\n    const initialQuantities = {};\n    for (const product of products) {\n      initialQuantities[product.id] = 0;\n    }\n    ;\n    setQuantities(initialQuantities);\n  }, [products]);\n  const value = {\n    products,\n    quantities,\n    handleQuantityChange,\n    cart,\n    handleAddProduct,\n    discount: 50\n  };\n  useEffect(() => {\n    setProducts(Data);\n  }, []);\n  useEffect(() => {\n    initializeQuantities();\n  }, [initializeQuantities]);\n  return /*#__PURE__*/_jsxDEV(ShoesContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Provider, \"2APFtDSoFk5HrUVUAw+1lob4ZHU=\");\n_c = Provider;\nexport { Provider };\nexport default ShoesContext;\nvar _c;\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["createContext","useEffect","useState","useCallback","Data","jsxDEV","_jsxDEV","ShoesContext","Provider","children","_s","products","setProducts","quantities","setQuantities","cart","setCart","handleAddProduct","id","name","price","img","prevCart","product","quantity","handleQuantityChange","key","newQuantity","prev","initializeQuantities","initialQuantities","value","discount","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/annaduong/Projects/e-commerce/src/context/shoes.js"],"sourcesContent":["import { createContext, useEffect, useState, useCallback } from 'react';\nimport Data from '../data/data.json';\n\nconst ShoesContext = createContext();\n\nfunction Provider({ children }) {\n  const [ products, setProducts ] = useState([]);\n  const [ quantities, setQuantities ] = useState();\n  const [ cart, setCart ] = useState([]);\n\n  const handleAddProduct = (id, name, price, img) => {\n    setCart((prevCart) => {\n      // iterate through cart \n      for (const product of prevCart) {\n        // for each selected product (object), if an item is already in there...\n        \n          // add that item's quantity to the quantity already in cart \n        // otherwise, if this item hasn't been added...\n          // return the previous cart with new product added \n          return [...prevCart, {id, name, price, img, quantity: quantities[id]}]\n      }\n        \n      \n    }\n    )\n  }\n\n  const handleQuantityChange = (key, newQuantity) => {\n    setQuantities(prev => ({\n      ...prev,\n      [key]: newQuantity\n    }));\n  }\n\n  const initializeQuantities = useCallback(() => {\n    const initialQuantities = {};\n    for (const product of products) {\n      initialQuantities[product.id] = 0;\n    };\n    setQuantities(initialQuantities);\n  }, [products]);\n\n  const value = {\n    products, \n    quantities,\n    handleQuantityChange,\n    cart,\n    handleAddProduct,\n    discount: 50\n  }\n\n  useEffect(() => {\n    setProducts(Data);\n  }, []);\n\n  useEffect(() => {\n    initializeQuantities();\n  }, [initializeQuantities]);\n\n\n  return(\n    <ShoesContext.Provider value={value}>\n      {children}\n    </ShoesContext.Provider>\n  )\n}\n\nexport { Provider };\nexport default ShoesContext;"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,YAAY,gBAAGP,aAAa,CAAC,CAAC;AAEpC,SAASQ,QAAQA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAM,CAAEC,QAAQ,EAAEC,WAAW,CAAE,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAEW,UAAU,EAAEC,aAAa,CAAE,GAAGZ,QAAQ,CAAC,CAAC;EAChD,MAAM,CAAEa,IAAI,EAAEC,OAAO,CAAE,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMe,gBAAgB,GAAGA,CAACC,EAAE,EAAEC,IAAI,EAAEC,KAAK,EAAEC,GAAG,KAAK;IACjDL,OAAO,CAAEM,QAAQ,IAAK;MACpB;MACA,KAAK,MAAMC,OAAO,IAAID,QAAQ,EAAE;QAC9B;;QAEE;QACF;QACE;QACA,OAAO,CAAC,GAAGA,QAAQ,EAAE;UAACJ,EAAE;UAAEC,IAAI;UAAEC,KAAK;UAAEC,GAAG;UAAEG,QAAQ,EAAEX,UAAU,CAACK,EAAE;QAAC,CAAC,CAAC;MAC1E;IAGF,CACA,CAAC;EACH,CAAC;EAED,MAAMO,oBAAoB,GAAGA,CAACC,GAAG,EAAEC,WAAW,KAAK;IACjDb,aAAa,CAACc,IAAI,KAAK;MACrB,GAAGA,IAAI;MACP,CAACF,GAAG,GAAGC;IACT,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,oBAAoB,GAAG1B,WAAW,CAAC,MAAM;IAC7C,MAAM2B,iBAAiB,GAAG,CAAC,CAAC;IAC5B,KAAK,MAAMP,OAAO,IAAIZ,QAAQ,EAAE;MAC9BmB,iBAAiB,CAACP,OAAO,CAACL,EAAE,CAAC,GAAG,CAAC;IACnC;IAAC;IACDJ,aAAa,CAACgB,iBAAiB,CAAC;EAClC,CAAC,EAAE,CAACnB,QAAQ,CAAC,CAAC;EAEd,MAAMoB,KAAK,GAAG;IACZpB,QAAQ;IACRE,UAAU;IACVY,oBAAoB;IACpBV,IAAI;IACJE,gBAAgB;IAChBe,QAAQ,EAAE;EACZ,CAAC;EAED/B,SAAS,CAAC,MAAM;IACdW,WAAW,CAACR,IAAI,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAENH,SAAS,CAAC,MAAM;IACd4B,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,CAACA,oBAAoB,CAAC,CAAC;EAG1B,oBACEvB,OAAA,CAACC,YAAY,CAACC,QAAQ;IAACuB,KAAK,EAAEA,KAAM;IAAAtB,QAAA,EACjCA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B;AAAC1B,EAAA,CA5DQF,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AA8DjB,SAASA,QAAQ;AACjB,eAAeD,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}